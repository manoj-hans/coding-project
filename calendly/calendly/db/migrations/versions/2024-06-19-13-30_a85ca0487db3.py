"""empty message

Revision ID: a85ca0487db3
Revises: 
Create Date: 2024-06-19 13:30:24.150103

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "a85ca0487db3"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.Column("email", sa.String(length=200), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_table(
        "availability_schedules",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column(
            "day_of_week",
            sa.Enum(
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday",
                name="dayofweek",
            ),
            nullable=True,
        ),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_availability_schedules_user_id"),
        "availability_schedules",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "calendars",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=200), nullable=True),
        sa.Column("event_slot_minutes", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_calendars_user_id"), "calendars", ["user_id"], unique=False
    )
    op.create_table(
        "calendar_availability_association",
        sa.Column("calendar_id", sa.Integer(), nullable=True),
        sa.Column("availability_schedule_id", sa.Integer(), nullable=True),
        sa.Column("expires_on", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["availability_schedule_id"],
            ["availability_schedules.id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(["calendar_id"], ["calendars.id"], ondelete="CASCADE"),
    )
    op.create_table(
        "events",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("calendar_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(length=200), nullable=True),
        sa.Column("start_time", sa.DateTime(), nullable=True),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("booked_by", sa.String(length=200), nullable=True),
        sa.Column("guests", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(["calendar_id"], ["calendars.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_events_calendar_id"), "events", ["calendar_id"], unique=False
    )
    op.create_index(op.f("ix_events_end_time"), "events", ["end_time"], unique=False)
    op.create_index(
        op.f("ix_events_start_time"), "events", ["start_time"], unique=False
    )
    op.create_table(
        "time_slots",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("availability_schedules_id", sa.Integer(), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=True),
        sa.Column("end_time", sa.Time(), nullable=True),
        sa.ForeignKeyConstraint(
            ["availability_schedules_id"],
            ["availability_schedules.id"],
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_time_slots_availability_schedules_id"),
        "time_slots",
        ["availability_schedules_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_time_slots_availability_schedules_id"), table_name="time_slots"
    )
    op.drop_table("time_slots")
    op.drop_index(op.f("ix_events_start_time"), table_name="events")
    op.drop_index(op.f("ix_events_end_time"), table_name="events")
    op.drop_index(op.f("ix_events_calendar_id"), table_name="events")
    op.drop_table("events")
    op.drop_table("calendar_availability_association")
    op.drop_index(op.f("ix_calendars_user_id"), table_name="calendars")
    op.drop_table("calendars")
    op.drop_index(
        op.f("ix_availability_schedules_user_id"), table_name="availability_schedules"
    )
    op.drop_table("availability_schedules")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
